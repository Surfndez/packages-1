{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-state\">gl-state</a><div class=\"contrib\"></div></h1>\n<p>Preserves WebGL state variables using a stack. This gives similar capabilities to OpenGL 1.0&apos;s pushAttrib/popAttrib, only with finer control over the variables which are stored. These methods are useful when writing simple hierarchical rendering functions, or for debugging operations in the middle of the pipeline.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;shell&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>gl-now</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;createStateStack&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>gl-state</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;stack</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>on</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>gl-init</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Create&#xA0;stack&#xA0;for&#xA0;saving&#xA0;state</span><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span>&#xA0;&#xA0;stack&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>createStateStack</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>gl</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Push&#xA0;variables&#xA0;onto&#xA0;stack&#xA0;here</span><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta method-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>stack</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>push</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>...&#xA0;clobber&#xA0;stuff&#xA0;here&#xA0;...</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>gl</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>clearColor</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Context&#xA0;states&#xA0;can&#xA0;also&#xA0;be&#xA0;nested</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>stack</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>push</span></span><span class=\"meta brace round js\"><span>(</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;...&#xA0;clobbber&#xA0;more&#xA0;stuff</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>gl</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>clearColor</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>stack</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>pop</span></span><span class=\"meta brace round js\"><span>(</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Color&#xA0;back&#xA0;to&#xA0;previous&#xA0;value</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>gl</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>getParameter</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"variable other object js\"><span>shell</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>COLOR_CLEAR_VALUE</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Restore&#xA0;state</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>stack</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>pop</span></span><span class=\"meta brace round js\"><span>(</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Now&#xA0;state&#xA0;is&#xA0;completely&#xA0;restored</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install gl-state\n</code></pre><h2 id=\"api\">API</h2>\n<h2 id=\"constructor\">Constructor</h2>\n<h3 id=\"-var-stack-require-gl-state-gl-variables-\"><code>var stack = require(&quot;gl-state&quot;)(gl[, variables])</code></h3>\n<p>Constructs a new state stack object that saves some subset of the global WebGL state for the context <code>gl</code></p>\n<ul>\n<li><code>gl</code> is a WebGL context</li>\n<li><code>variables</code> is an optional list of state variables as defined in the specification of <a href=\"http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14.3\"><code>gl.getParameter</code></a>. If not specified, the entire state will be saved</li>\n</ul>\n<p><strong>Returns</strong> A new WebGL state stack object</p>\n<p><strong>Note on performance</strong> Modifying the WebGL state is expensive, especially if you update more of it. In general, you should avoid creating too many full context state changes. To do this, you should only specify a list of variables which you plan on actually modifying in the course of your code.  For example, to save only state variables associated with the depth buffer, you could do the following:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;depthStack&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>createStack</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>gl</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DEPTH_CLEAR_VALUE</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DEPTH_RANGE</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DEPTH_TEST</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DEPTH_WRITEMASK</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>In this way you don&apos;t have to save and update more of the WebGL context than is necessary.</p>\n<p><strong>Note on textures</strong> Also the texture unit state is handled in a slightly different way. To specify saving the texture state, you can do:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;textureStack&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>createStack</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>gl</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>TEXTURE</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>gl</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>ACTIVE_TEXTURE</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>This will save the texture state associated to all currently active texture units.</p>\n<p><strong>Note on support</strong> Currently support for saving the state of shaders, uniforms and attributes is somewhat limited. If you are using these features and want to preserve the state of the rendering context you must do this yourself.</p>\n<h2 id=\"methods\">Methods</h2>\n<p>The following methods are exposed by the stack object:</p>\n<h3 id=\"-stack-push-\"><code>stack.push()</code></h3>\n<p>Saves the current state of the WebGL context onto the stack</p>\n<h3 id=\"-stack-pop-\"><code>stack.pop()</code></h3>\n<p>Restores the last pushed state from the stack.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2014 Mikola Lysenko. MIT License</p>\n"}