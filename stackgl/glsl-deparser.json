{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-deparser\">glsl-deparser</a><div class=\"contrib\"></div></h1>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;Path&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>path</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;tokenizer&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>glsl-tokenizer</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;parser&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>glsl-parser</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;deparser&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>glsl-deparser</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"support variable js\"><span>process</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span>stdin</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>pipe</span><span class=\"meta brace round js\"><span>(</span></span><span>tokenizer</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>pipe</span><span class=\"meta brace round js\"><span>(</span></span><span>parser</span><span class=\"meta brace round js\"><span>(</span><span>)</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>pipe</span><span class=\"meta brace round js\"><span>(</span></span><span>deparser</span><span class=\"meta brace round js\"><span>(</span><span>)</span><span>)</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;&lt;--&#xA0;deparser!</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>pipe</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"support variable js\"><span>process</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span>stdout</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"support variable js\"><span>process</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span>stdin</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>resume</span><span class=\"meta brace round js\"><span>(</span><span>)</span></span></span></div>\n</code></pre>\n<p>transform a stream of <a href=\"https://github.com/chrisdickinson/glsl-parser\">glsl-parser</a> AST nodes\ninto strings.</p>\n<p>only operates on top-level statements emitted by <code>glsl-parser</code>, so the code it emits is executable\nby webgl.</p>\n<h2 id=\"api\">api</h2>\n<h3 id=\"deparser-whitespace_enabled-true-tab_text-\">deparser(whitespace_enabled=true, tab_text=&apos;  &apos;)</h3>\n<p>Creates a <code>readable</code>/<code>writable</code> stream.</p>\n<p>If no args are provided, <code>whitespace</code> is assumed to be enabled, and the tab text will be <code>&apos;  &apos;</code>.</p>\n<p>If you pass <code>false</code> for the first arg, only syntactically significant whitespace will be emitted (it&apos;ll behave like a poor man&apos;s minifier).</p>\n<p>If you pass <code>true</code> and tab text, that tab text will be used to indent code.</p>\n<h2 id=\"note\">note</h2>\n<p>the big caveat is that preprocessor if statements (<code>#if*</code>, <code>#endif</code>) won&apos;t work unless\neach branch produces a parseable tree.</p>\n<h2 id=\"license\">license</h2>\n<p>MIT</p>\n"}