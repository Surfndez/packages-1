{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mikolalysenko/greedy-mesher\">greedy-mesher</a><div class=\"contrib\"></div></h1>\n<p>A flexible system for generating <a href=\"http://0fps.wordpress.com/2012/07/07/meshing-minecraft-part-2/\">greedy meshes</a> of <a href=\"https://github.com/mikolalysenko/ndarray\">ndarrays</a>.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;compileMesher&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>greedy-mesher</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;mesher&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;compileMesher</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;extraArgs</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;order</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>append</span></span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>lo_x</span></span><span>,&#xA0;</span><span class=\"variable parameter function js\"><span>lo_y</span></span><span>,&#xA0;</span><span class=\"variable parameter function js\"><span>hi_x</span></span><span>,&#xA0;</span><span class=\"variable parameter function js\"><span>hi_y</span></span><span>,&#xA0;</span><span class=\"variable parameter function js\"><span>val</span></span><span>,&#xA0;</span><span class=\"variable parameter function js\"><span>result</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;result</span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>push</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span><span>[</span></span><span>lo_x</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;lo_y</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span>hi_x</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;hi_y</span><span class=\"meta brace square js\"><span>]</span><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;test_array&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-pack</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace square js\"><span>[</span><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;result&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>mesher</span><span class=\"meta brace round js\"><span>(</span></span><span>test_array</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;result</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"support function js console\"><span>.log</span></span><span class=\"meta brace round js\"><span>(</span></span><span>result</span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;outputs:&#xA0;[&#xA0;[&#xA0;[&#xA0;1,&#xA0;0&#xA0;],&#xA0;[&#xA0;2,&#xA0;1&#xA0;]&#xA0;],&#xA0;[&#xA0;[&#xA0;1,&#xA0;1&#xA0;],&#xA0;[&#xA0;3,&#xA0;3&#xA0;]&#xA0;]&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install greedy-mesher\n</code></pre><h3 id=\"-require-greedy-mesher-options-\"><code>require(&quot;greedy-mesher&quot;)(options)</code></h3>\n<p>This routine generates a greedy mesher for a given order and list of closures</p>\n<ul>\n<li><code>order</code> An array representing the order in which to mesh the input.</li>\n<li><code>extraArgs</code> The number of optional arguments to pass to each closure.</li>\n<li><code>skip(a,...)</code> A closure which tests if the given voxel should be skipped.  (Default: skips 0)</li>\n<li><code>merge(a,b,...)</code> A closure which tests if voxels a and b can be merged in the mesh.  (Default: checks if voxels are equal)</li>\n<li><code>append(lo0, lo1, ..., lon, hi0, hi1, ..., hin, val, ...)</code></li>\n<li><code>useGetter</code> if set, use <code>.get()</code> to access underlying data store</li>\n<li><code>debug</code> If set, print out the generated source code to the console</li>\n</ul>\n<p><strong>Returns</strong> A compiled mesh generator.  Call this method using:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;my_mesh&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;mesher</span><span class=\"meta brace round js\"><span>(</span></span><span>array</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;option1</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;option2</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span><span>.</span><span>.</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}