{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mikolalysenko/cubic-hermite\">cubic-hermite</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://en.wikipedia.org/wiki/Cubic_Hermite_spline\">Cubic hermite spline</a> for interpolating position/velocity pairs.  Simplest quick and dirty way to get a smooth path between points</p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install cubic-hermite\n</code></pre><h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;hermite&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>cubic-hermite</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Compute&#xA0;intial&#xA0;position&#xA0;and&#xA0;velocity</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;initial_position&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;initial_velocity&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;final_positions&#xA0;&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;final_velocity&#xA0;&#xA0;&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Plot&#xA0;curve</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;t</span><span class=\"keyword operator js\"><span>=</span></span><span class=\"constant numeric js\"><span>0.0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;t</span><span class=\"keyword operator js\"><span>&lt;</span></span><span class=\"constant numeric js\"><span>1.0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;t</span><span class=\"keyword operator js\"><span>+=</span></span><span class=\"constant numeric js\"><span>0.1</span></span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"support function js console\"><span>.log</span></span><span class=\"meta brace round js\"><span>(</span></span><span>hermite</span><span class=\"meta brace round js\"><span>(</span></span><span>initial_position</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;initial_velocity</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;final_position</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;final_velocity</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;t</span><span class=\"meta brace round js\"><span>)</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h3 id=\"-require-cubic-hermite-p0-v0-p1-v1-t-result-\"><code>require(&quot;cubic-hermite&quot;)(p0, v0, p1, v1, t[, result])</code></h3>\n<p>Computes an interpolated position between initial and final configurations at time t.  Arguments can be either scalars or arrays</p>\n<ul>\n<li><code>p0</code> is the initial position</li>\n<li><code>v0</code> is the initial velocity</li>\n<li><code>p1</code> is the final position</li>\n<li><code>v1</code> is the final velocity</li>\n<li><code>t</code> is the point on the curve to interpolate to in the range [0,1]</li>\n<li><code>result</code> is a vector that gets the result of the interpolation (if not specified, a new vector is created)</li>\n</ul>\n<p><strong>Returns</strong> The interpolated point on the curve</p>\n<h3 id=\"-require-cubic-hermite-derivative-p0-v0-p1-v1-t-result-\"><code>require(&quot;cubic-hermite&quot;).derivative(p0, v0, p1, v1, t[, result])</code></h3>\n<p>Returns the velocity along the curve at a point t</p>\n<ul>\n<li><code>p0</code> is the initial position</li>\n<li><code>v0</code> initial velocity</li>\n<li><code>p1</code> final position</li>\n<li><code>v1</code> final velocity</li>\n<li><code>t</code> point on the curve to interpolate to, in the range [0,1]</li>\n<li><code>result</code> stores the result of the interpolation.  (if not specified, is reallocated)</li>\n</ul>\n<p><strong>Returns</strong> The interpolated velocity at the time <code>t</code></p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}