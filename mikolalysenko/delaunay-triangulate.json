{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mikolalysenko/delaunay-triangulate\">delaunay-triangulate</a><div class=\"contrib\"></div></h1>\n<p>Triangulates a set of points into a <a href=\"http://en.wikipedia.org/wiki/Delaunay_triangulation\">Delaunay triangulation</a>.  This code works in arbitrary dimensions, and both in the server and in the browser.</p>\n<p><img src=\"https://raw.githubusercontent.com/mikolalysenko/delaunay-triangulate/master/delaunay3d.png\"></p>\n<p><a href=\"https://ci.testling.com/mikolalysenko/delaunay-triangulate\"><img src=\"https://ci.testling.com/mikolalysenko/delaunay-triangulate.png\" alt=\"testling badge\"></a></p>\n<p><a href=\"http://travis-ci.org/mikolalysenko/delaunay-triangulate\"></a></p>\n<p>Here are some in browser demos:</p>\n<ul>\n<li><a href=\"http://mikolalysenko.github.io/delaunay-triangulate/2d.html\">2D Delaunay triangulation</a></li>\n<li><a href=\"http://mikolalysenko.github.io/delaunay-triangulate/3d.html\">3D Delaunay triangulation</a></li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;triangulate&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>delaunay-triangulate</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;points&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0.5</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.5</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;triangles&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;triangulate</span><span class=\"meta brace round js\"><span>(</span></span><span>points</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"support function js console\"><span>.log</span></span><span class=\"meta brace round js\"><span>(</span></span><span>triangles</span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install delaunay-triangulate\n</code></pre><h2 id=\"api\">API</h2>\n<h4 id=\"-require-delaunay-triangulate-points-pointatinfinity-\"><code>require(&quot;delaunay-triangulate&quot;)(points[,pointAtInfinity])</code></h4>\n<p>Constructs a Delaunay triangulation over <code>points</code></p>\n<ul>\n<li><code>points</code> is a collection of points in Euclidean space.</li>\n<li><code>pointAtInfinity</code> is a flag, which if set adds an extra point at infinity to give the spherical compactification of the triangulation.  The index of the point at infinity is <code>-1</code></li>\n</ul>\n<p><strong>Returns</strong> A list of cells representing the faces of the triangulation.  These are triangles in 2D or tetrahedra in 3D.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013-2014 Mikola Lysenko. MIT License</p>\n"}