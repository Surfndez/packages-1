{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/marklundin/glsl-sdf-primitives\">Modeling with distance fields</a><div class=\"contrib\"></div></h1>\n<p>A collection of distance field equations for modeling and ray-marching basic primitives shapes. Primitives can be combined and modified to create more complex shapes using <a href=\"https://github.com/marklundin/glsl-sdf-ops\">glsl-sdf-ops</a>.</p>\n<p><img src=\"http://i.imgur.com/hQcyofG.png\" alt=\"Ray traced primitives\"></p>\n<p>The library is <a href=\"https://github.com/stackgl/glslify\">glslify</a> compatible. An demo exists <a href=\"http://glslb.in/s/464383f8\">here</a>. </p>\n<p>These were taken from iQ&apos;s excellent <a href=\"http://iquilezles.org/www/articles/distfunctions/distfunctions.htm\">distance functions</a> page</p>\n<h2 id=\"usage\">Usage</h2>\n<pre><code>vec2 doModel(vec3 p);\n#pragma glslify: raytrace = require(&apos;glsl-raytrace&apos;, map = doModel, steps = 90)\n\n// import a primitive\n#pragma glslify: sdTorus     = require(&apos;glsl-sdf-primitives/sdTorus&apos;)\n\nvec2 doModel(vec3 p) {\n  return vec2( sdTorus( p, vec2( 0.20, 0.05 )), 0.0 ));\n}\n</code></pre><h3 id=\"primitives\">Primitives</h3>\n<h4 id=\"signed-sphere\">Signed Sphere</h4>\n<p><code>sdSphere( vec3 position, float radius )</code></p>\n<h4 id=\"signed-box\">Signed Box</h4>\n<p><code>sdBox( vec3 position, vec3 dimension )</code></p>\n<h4 id=\"unsigned-box\">Unsigned Box</h4>\n<p><code>sdBox( vec3 position, vec3 dimension )</code></p>\n<h4 id=\"unsigned-rounded-box\">Unsigned Rounded Box</h4>\n<p><code>sdBox( vec3 position, vec3 dimension, float rounding )</code></p>\n<h4 id=\"signed-plane\">Signed Plane</h4>\n<p><code>sdPlane( vec3 position, vec4 planeEquation )</code></p>\n<h4 id=\"signed-torus\">Signed Torus</h4>\n<p><code>sdTorus( vec3 position, float hole )</code></p>\n<h4 id=\"signed-capped-cone\">Signed Capped Cone</h4>\n<p><code>sdCappedCone( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"signed-capped-cylinder\">Signed Capped Cylinder</h4>\n<p><code>sdCappedCylinder( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"signed-capsule\">Signed Capsule</h4>\n<p><code>sdCapsule( vec3 position, vec3 a, vec3 b, float radius )</code></p>\n<h4 id=\"signed-cone\">Signed Cone</h4>\n<p><code>sdCone( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"signed-cylinder\">Signed Cylinder</h4>\n<p><code>sdCylinder( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"signed-hexagonal-prism\">Signed Hexagonal Prism</h4>\n<p><code>sdHexPrism( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"signed-triangle-prism\">Signed Triangle Prism</h4>\n<p><code>sdTriPrism( vec3 position, vec2 dimension )</code></p>\n<h4 id=\"unsigned-quadrilateral\">Unsigned Quadrilateral</h4>\n<p><code>udQuad( vec3 p, vec3 a, vec3 b, vec3 c, vec3 d )</code></p>\n<h4 id=\"unsigned-triangle\">Unsigned Triangle</h4>\n<p><code>udTriudTriangle( vec3 p, vec3 a, vec3 b, vec3 c )</code></p>\n"}