{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/wwwtyro/stackgl-shader-experiment\">stackgl-shader-experiment</a><div class=\"contrib\"></div></h1>\n<p>Generates boilerplate for experimenting with a fragment shader.</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;-g&#xA0;stackgl-shader-experiment</span></span></div>\n</code></pre>\n<h2 id=\"use\">Use</h2>\n<p>Create a new directory for your experiment, then run</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>stackgl-shader-experiment</span></span></div>\n</code></pre>\n<p><code>stackgl-shader-experiment</code> will download dependencies and generate boilerplate\ncode for your experiment. To kick off a live reload server for your experiment,\nsimply run <code>npm start</code>. Then visit <a href=\"http://localhost:9966\">http://localhost:9966</a>\nin your browser.</p>\n<p>The fragment shader being executed can be found in <code>quad.frag</code>. Edit this file,\nsave it, and it will be reloaded in your browser automatically.</p>\n<p><code>index.js</code> contains the boilerplate webgl code for running the experiment. By\ndefault, it provides the uResolution and uTime uniforms to the shader, and runs\nin a <code>requestAnimationFrame</code> loop.</p>\n"}