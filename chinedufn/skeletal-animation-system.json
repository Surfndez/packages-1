{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/chinedufn/skeletal-animation-system\">skeletal-animation-system  </a><div class=\"contrib\"></div></h1>\n<blockquote>\n<p>A standalone, stateless, dual quaternion based skeletal animation system built with interactive applications in mind</p>\n</blockquote>\n<p><a href=\"http://chinedufn.github.io/skeletal-animation-system/\">View live demo</a></p>\n<p>TODO: Create a demo site instead of just a demo. Embed a demo inside of the demo site</p>\n<iframe scrolling=\"no\" seamless=\"seamless\" src=\"https://chinedufn.github.io/skeletal-animation-system/\"></iframe><h2 id=\"tutorials\">Tutorials</h2>\n<p><a href=\"http://chinedufn.com/webgl-skeletal-animation-sound-effect-tutorial/\">WebGL Skeletal Animation Sound Effects Tutorial</a></p>\n<p><a href=\"http://chinedufn.com/attaching-objects-to-bones/\">Attaching objects to bones</a></p>\n<p><a href=\"http://chinedufn.com/webgl-skeletal-animation-tutorial\">WebGL Skeletal Animation Tutorial</a></p>\n<h2 id=\"background-initial-motivation\">Background / Initial Motivation</h2>\n<p>skeletal-animation-system aims to give the user a flexible module for managing skeletal animations across different 3d models and bone groups.</p>\n<p><code>skeletal-animation-system</code> aims to provide a sane API for starting, stopping and interpolating skeletal animations.</p>\n<p>It supports blending between\nyour previous and current animation when you switch animations. It also supports splitting your model into different bone groups such as the upper\nand lower body, allowing you to, for example, play a walking animation for your legs while playing a punch animation for your upper body.</p>\n<p><code>skeletal-animation-system</code> does not maintain an internal state, but instead lets the modules consumer track things such as the current animation and the current clock time.</p>\n<h2 id=\"i-use-matrices-and-not-dual-quaternions\">I use matrices and not dual quaternions</h2>\n<p>The first versions of <code>skeletal-animation-system</code> uses matrices instead of dual quaternions.</p>\n<p>The issue there was that <a href=\"http://chinedufn.com/dual-quaternion-shader-explained/\">blending matrices can lead to unexpected artifacts</a>.</p>\n<p>So we switched to dual quaternions and completely dropped support for matrices.</p>\n<p>However, if you use matrices you can still make use of <code>skeletal-animation-system</code>.</p>\n<ol>\n<li><a href=\"https://github.com/chinedufn/mat4-to-dual-quat\">Convert your matrices into dual quaternions</a> once when you first load your model.</li>\n<li>Use <code>skeletal-animation-system</code> to determine your pose dual quaternions</li>\n<li><a href=\"https://github.com/chinedufn/dual-quat-to-mat4\">Convert your pose dual quaternions back into matrices before each render</a></li>\n<li>Use your newly created matrices for skinning</li>\n</ol>\n<p>The 3rd step here means that you&apos;re doing some extra work on the CPU, but this hopefully bridges the gap for you until you can move to dual quaternion\nbased skinning.</p>\n<p>TODO: Example code demonstrating how to incorporate <code>skeletal-animation-system</code> into matrix based skinning application</p>\n<p>This API is still experimental and will evolve as we use it and realize the kinks.</p>\n<h2 id=\"to-install\">To Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;install&#xA0;--save&#xA0;skeletal-animation-system</span></span></div>\n</code></pre>\n<h2 id=\"demo\">Demo</h2>\n<p>To run the demo locally:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;git&#xA0;clone&#xA0;https://github.com/chinedufn/skeletal-animation-system</span></span></div><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;cd&#xA0;skeletal-animation-system</span></span></div><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;install</span></span></div><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;run&#xA0;demo</span></span></div>\n</code></pre>\n<p>Changes to the <code>demo</code> and <code>src</code> files will now live reload in your browser.</p>\n<hr>\n<p><a href=\"http://chinedufn.github.io/skeletal-animation-system/\">View live demo</a></p>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;animationSystem&#xA0;=&#xA0;require(&apos;skeletal-animation-system&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Parsed&#xA0;using&#xA0;collada-dae-parser&#xA0;or&#xA0;some&#xA0;other&#xA0;parser</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;parsedColladaModel&#xA0;=&#xA0;require(&apos;./parsed-collada-model.json&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Keyframe&#xA0;data&#xA0;for&#xA0;all&#xA0;joints.</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;@see&#xA0;`github.com/chinedufn/blender-actions-to-json`&#xA0;for&#xA0;an&#xA0;example&#xA0;format</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;lowerBodyKeyframes&#xA0;=&#xA0;{...}</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;upperBodyKey&#xA0;=&#xA0;{...}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Convert&#xA0;our&#xA0;joint&#xA0;names&#xA0;into&#xA0;their&#xA0;associated&#xA0;joint&#xA0;index&#xA0;number</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;This&#xA0;number&#xA0;comes&#xA0;from&#xA0;collada-dae-parser</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;(or&#xA0;your&#xA0;parser&#xA0;of&#xA0;choice)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;upperBodyJointNums&#xA0;=&#xA0;[0,&#xA0;1,&#xA0;5,&#xA0;6,&#xA0;8]</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;lowerBodyJointNums&#xA0;=&#xA0;[2,&#xA0;3,&#xA0;4,&#xA0;7,&#xA0;9]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Our&#xA0;options&#xA0;for&#xA0;animating&#xA0;our&#xA0;model&apos;s&#xA0;upper&#xA0;body</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;upperBodyOptions&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;currentTime:&#xA0;28.24,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;jointNums:&#xA0;upperBodyJointsNums,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;blendFunction:&#xA0;function&#xA0;(dt)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;Blend&#xA0;animations&#xA0;linearly&#xA0;over&#xA0;2.5&#xA0;seconds</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;1&#xA0;/&#xA0;2.5&#xA0;*&#xA0;dt</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;},</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;currentAnimation:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;keyframes:&#xA0;currentAnimKeyframes,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;startTime:&#xA0;25</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;},</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;previousAnimation:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;keyframes:&#xA0;previousAnimKeyframes,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;startTime:&#xA0;24.5</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Our&#xA0;options&#xA0;for&#xA0;animating&#xA0;our&#xA0;model&apos;s&#xA0;lower&#xA0;body</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;lowerBodyOptions&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;currentTime:&#xA0;28.24,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;jointNums:&#xA0;lowerBodyJointNums,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;currentAnimation:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;keyframes:&#xA0;currentAnimKeyframes,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;startTime:&#xA0;24.3,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;noLoop:&#xA0;true</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;interpolatedUpperBodyJoints&#xA0;=&#xA0;animationSystem</span></span></div><div class=\"line\"><span class=\"source js\"><span>.interpolateJoints(upperBodyOptions).joints</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;lowerBodyData&#xA0;=&#xA0;animationSystem</span></span></div><div class=\"line\"><span class=\"source js\"><span>.interpolateJoints(lowerBodyOptions)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;interpolatedLowerBodyJoints&#xA0;=&#xA0;lowerBodyData.joints</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(lowerBodyData.currentAnimationInfo)</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;=&gt;&#xA0;{lowerKeyframeNumber:&#xA0;5,&#xA0;upperKeyframeNumber:&#xA0;6}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;You&#xA0;now&#xA0;have&#xA0;your&#xA0;interpolated&#xA0;upper&#xA0;and&#xA0;lower&#xA0;body&#xA0;dual&#xA0;quaternions&#xA0;(joints).</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;You&#xA0;can&#xA0;pass&#xA0;these&#xA0;into&#xA0;any&#xA0;vertex&#xA0;shader&#xA0;that</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;works&#xA0;with&#xA0;dual&#xA0;quaternions</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;If&#xA0;you&apos;re&#xA0;just&#xA0;getting&#xA0;started&#xA0;and&#xA0;you&#xA0;still&#xA0;need&#xA0;matrices&#xA0;you</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;can&#xA0;convert&#xA0;these&#xA0;into&#xA0;matrices&#xA0;using&#xA0;dual-quat-to-mat4</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;@see&#xA0;https://github.com/chinedufn/dual-quat-to-mat4</span></span></div>\n</code></pre>\n<h2 id=\"expected-json-model-format\">Expected JSON model format</h2>\n<p>TODO: <a href=\"http://github.com/chinedufn/skeletal-animation-system/blob/master/\">Link to collada-dae-parser README</a></p>\n<h2 id=\"benchmark\">Benchmark</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;bench</span></span></div>\n</code></pre>\n<h2 id=\"todo-\">TODO:</h2>\n<ul>\n<li>[x] Handle rotation quaternion lerp when dot product is &lt; 0</li>\n<li>[ ] Implement more from the papers linked in <code>References</code> section below (whenever we need them)</li>\n<li>[x] Add documentation about how to approach playing a sound effect on a keyframe in your game / simulation / program</li>\n<li>[x] Benchmark</li>\n<li>[ ] Allow consumer to provide the sampling function between keyframes. Currently we sample linearly between all keyframes. Could make use of <a href=\"https://github.com/chromakode/fcurve\">chromakode/fcurve</a> here</li>\n<li>[ ] Create a new demo site and demo(s)</li>\n</ul>\n<h2 id=\"api\">API</h2>\n<h3 id=\"animationsystem-interpolatejoints-options-object\"><code>animationSystem.interpolateJoints(options)</code> -&gt; <code>Object</code></h3>\n<h4 id=\"options\">options</h4>\n<p><em>Optional</em></p>\n<p>Type: <code>object</code></p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Example&#xA0;overrides</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;myOptions&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;TODO:</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>interpolatedJoints&#xA0;=&#xA0;animationSystem.interpolateJoints(myOptions)</span></span></div>\n</code></pre>\n<h5 id=\"currenttime\">currentTime</h5>\n<p>Type: <code>Number</code></p>\n<p>Default: <code>0</code></p>\n<p>The current number of seconds elapsed. If you have an animation an loop,\nthis will typically be the sum of all of your loops time deltas</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Example&#xA0;of&#xA0;tracking&#xA0;current&#xA0;time</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;currentTime&#xA0;=&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>function&#xA0;animationLoop&#xA0;(dt)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;currentTime&#xA0;+=&#xA0;dt</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h5 id=\"keyframes\">keyframes</h5>\n<p>Type: <code>Object</code></p>\n<p>Default: <code>{}</code></p>\n<p>TODO: Link to collada-dae-parser README on keyframes for more info, but also put an example here</p>\n<h5 id=\"jointnums\">jointNums</h5>\n<p>Type: <code>Array</code></p>\n<p>An array of joint indices that you would like to interpolate.</p>\n<p>Say your model has 4 joints. To interpolate the entire model you would pass in [0, 1, 2, 3].\nTo only interpolate two of the joints you might pass in [0, 2], or any desired combination.</p>\n<p>These joint indices are based on the order of the joints in your <code>keyframes</code></p>\n<h5 id=\"blendfunction\">blendFunction</h5>\n<p>Type: <code>Function</code></p>\n<p>Default: <code>Blend linearly over 0.2 seconds</code></p>\n<p>A function that accepts a time elapsed in seconds\nand returns a value between <code>0</code> and <code>1</code>.</p>\n<p>This returned value represents the weight of the new animation.</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>function&#xA0;myBlendFunction&#xA0;(dt)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;Blend&#xA0;the&#xA0;old&#xA0;animation&#xA0;into&#xA0;the&#xA0;new&#xA0;one&#xA0;linearly&#xA0;over&#xA0;5&#xA0;seconds</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;return&#xA0;0.2&#xA0;*&#xA0;dt)</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h5 id=\"currentanimation\">currentAnimation</h5>\n<p>Type: <code>Object</code></p>\n<p>An object containing parameters for the current animation</p>\n<p>If you supply a previous animation your current animation will be\nblended in using your <code>blendFunction</code></p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;currentAnimation&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;keyframes:&#xA0;{0:&#xA0;[..],&#xA0;1.66666:&#xA0;[...]}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;startTime:&#xA0;10</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h6 id=\"currentanimation-keyframes\">currentAnimation.keyframes</h6>\n<p>Type: <code>Array</code></p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&quot;0&quot;:&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&quot;1.33333&quot;:&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;2,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;2,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;5,&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>Pose matrices for each joint in the model, organized by the animation time (<code>0</code> and <code>1.33333</code> are seconds)</p>\n<h6 id=\"currentanimation-starttime\">currentAnimation.startTime</h6>\n<p>Type: <code>Number</code></p>\n<p>The time in seconds that your current animation was initiated. This gets compared with\nthe <code>currentTime</code> in order to interpolate your joint data appropriately.</p>\n<h6 id=\"currentanimation-noloop\">currentAnimation.noLoop</h6>\n<p>Type: <code>Boolean</code></p>\n<p>Whether or not your animation should loop. For example, let&apos;s say you are 13 seconds into a 4 second animation.</p>\n<p>If <code>noLoop === true</code> then you will be playing the frame at the 4th second.</p>\n<p>If <code>noLoop === false</code> then you will be playing the frame at the 1st second.</p>\n<h5 id=\"previousanimation\">previousAnimation</h5>\n<p>An object containing parameters for the previous animations.\nYour previous animation gets blended out using your <code>blendFunction</code>\nwhile your current animation gets blended in.</p>\n<p>Type: <code>Object</code></p>\n<h6 id=\"previousanimation-keyframes\">previousAnimation.keyframes</h6>\n<p>Type: <code>Array</code></p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&quot;0&quot;:&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&quot;1.33333&quot;:&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;2,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;2,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;[1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;1,&#xA0;0,&#xA0;0,&#xA0;0,&#xA0;5,&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>Pose matrices for each joint in the model, organized by the animation time (<code>0</code> and <code>1.33333</code> are seconds)</p>\n<h6 id=\"previousanimation-starttime\">previousAnimation.startTime</h6>\n<p>Type: <code>Number</code></p>\n<p>The time in seconds that your previous animation was initiated.\nThis is used in order to blend in the current animation.</p>\n<h2 id=\"returned-data\">Returned data</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>//&#xA0;Example</span></span></div><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;joints:&#xA0;[...],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;currentAnimationInfo:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;lowerKeyframeNumber:&#xA0;0,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;upperKeyframeNumber::&#xA0;1</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p><code>currentAnimationInfo</code> is the lower and upper keyframe time bounds of the current animation.\nIf you have three keyframes at 1 8 and 19 seconds and you are currently 12 seconds into your animation then your lower keyframe is 1 (8) and your upper keyframe is 2 (19).</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"https://github.com/chinedufn/collada-dae-parser\">collada-dae-parser</a></li>\n<li><a href=\"https://github.com/chinedufn/blender-iks-to-fks\">blender-iks-to-fks</a></li>\n<li><a href=\"https://github.com/chinedufn/blender-actions-to-json\">blender-actions-to-json</a></li>\n</ul>\n<h2 id=\"references\">References</h2>\n<ul>\n<li><a href=\"http://blog.demofox.org/2012/09/21/anatomy-of-a-skeletal-animation-system-part-1/\">Anatomy of a skeletal animation system part 1</a>, <a href=\"http://blog.demofox.org/2012/09/21/anatomy-of-a-skeletal-animation-system-part-2/\">part 2</a> and <a href=\"http://blog.demofox.org/2012/09/21/anatomy-of-a-skeletal-animation-system-part-3/\">part 3</a></li>\n<li><a href=\"http://www.xbdev.net/misc_demos/demos/dual_quaternions_beyond/paper.pdf\">Dual-Quaternions - From Classical Mechanics to Computer Graphics and Beyond</a><ul>\n<li>This taught us to negate one of the dual quaternions if the dot product of the rotation quaternions was less than 0</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT</p>\n"}