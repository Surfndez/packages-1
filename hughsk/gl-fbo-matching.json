{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/hughsk/gl-fbo-matching\">gl-fbo-matching </a><div class=\"contrib\"></div></h1>\n<p>Compare two <a href=\"http://github.com/gl-modules/gl-fbo\">gl-fbo</a> instances&apos; contents\nfor matching pixels. There are certainly smarter ways of doing this but this\nis the simplest :)</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-fbo-matching/\"></a></p>\n<h3 id=\"channels-matching-fbo1-fbo2-threshold-\">channels = matching(fbo1, fbo2, [threshold])</h3>\n<p>Returns an array of values: one for each channel (RGBA). A value of 1 means that\nall of the pixels in <code>fbo1</code> match those in <code>fbo2</code>, and a value of 0 means that\nnone of them do.</p>\n<p>Optionally, you can pass in a <code>threshold</code> value to limit the comparison&apos;s\nsensitivity &#x2013; effectively, setting the maximum distance between two pixels&apos;\nvalues before considering that pixel matching. Defaults to 0.</p>\n<p>Note that using this function will result in\n<code>gl.bindFramebuffer(gl.FRAMEBUFFER, null)</code> being called.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/hughsk/gl-fbo-matching/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}