{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/ray-plane-intersection\">ray-plane-intersection</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Whether a 3D picking ray intersects with a plane. The plane is defined as having a <code>normal</code> [x, y, z] and <code>distance</code>. </p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;intersect&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ray-plane-intersection</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;origin&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;dir&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;normal&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;distance&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;hit&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>intersect</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>out</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;origin</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;dir</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;normal</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;distance</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>if</span></span><span>&#xA0;</span><span class=\"meta brace round js\"><span>(</span></span><span>hit</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>collision&#xA0;occurred&#xA0;</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span>hit</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;[1,&#xA0;0,&#xA0;0]</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<p>The distance can be determined with a second point on the plane, like so:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;d&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>dot</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>normal</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;point</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>PRs welcome.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/ray-plane-intersection\"></a></p>\n<h4 id=\"-hit-intersect-out-origin-direction-normal-distance-\"><code>hit = intersect(out, origin, direction, normal, distance)</code></h4>\n<p>Test whether the ray <code>(origin, direction)</code> intersects with the plane <code>(normal, distance)</code>. </p>\n<p>If an intersection occurs, it is stored in <code>out</code> [x, y, z] and returned. Otherwise <code>null</code> is returned.</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/get-plane-normal\">get-plane-normal</a></li>\n<li><a href=\"https://www.npmjs.com/package/find-basis-3d\">find-basis-3d</a></li>\n<li><a href=\"https://www.npmjs.com/package/ray-triangle-intersection\">ray-triangle-intersection</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/ray-plane-intersection/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}