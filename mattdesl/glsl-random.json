{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/glsl-random\">glsl-random </a><div class=\"contrib\"></div></h1>\n<p>The classic &apos;one-liner&apos; for 2D pseudo-random values in GLSL. This uses a highp version for improved randomness and better stability across GPUs, see here:<br><a href=\"http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\">http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/</a></p>\n<p>However, the &apos;classic&apos; lowp version (with no precision specified) is also included here. Some may find it useful for targeted mobile GPUs. </p>\n<p><img src=\"http://i.imgur.com/CSC7rWV.png\" alt=\"Noise\"></p>\n<h2 id=\"usage\">usage</h2>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;random&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-random</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>...</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;rnd&#xA0;=&#xA0;random(myVec</span><span class=\"keyword operator glsl\"><span>.xy</span></span><span>);</span></span></div>\n</code></pre>\n<p>Typically you might use it like so:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=&#xA0;</span><span class=\"storage type glsl\"><span>vec4</span></span><span>(&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>(&#xA0;random(&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragCoord</span></span><span class=\"keyword operator glsl\"><span>.xy</span></span><span>&#xA0;/&#xA0;resolution</span><span class=\"keyword operator glsl\"><span>.xy</span></span><span>&#xA0;)&#xA0;),&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>&#xA0;);</span></span></div>\n</code></pre>\n<h3 id=\"default-precision\">default precision</h3>\n<p>Requiring the following will give you a function that doesn&apos;t specify any precision:  </p>\n<p><code>#pragma glslify: random = require(glsl-random/lowp)</code></p>\n<h2 id=\"license\">license</h2>\n<p>BSD-3-Clause</p>\n"}