{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/budo\">bud&#x14D;</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>This is a browserify development server inspired by <a href=\"https://github.com/chrisdickinson/beefy\">beefy</a> and <a href=\"https://github.com/maxogden/wzrd\">wzrd</a>, but specifically focused on incremental reloading and LiveReload integration (including CSS injection).</p>\n<p>To install:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;budo&#xA0;-g</span></span></div>\n</code></pre>\n<p>Running budo will start a server with a default <code>index.html</code> and incrementally bundle your source on filesave. The requests are delayed until the bundle has finished, so you won&apos;t be served stale or empty bundles if you refresh the page mid-update. Examples:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;serve&#xA0;file&#xA0;on&#xA0;port&#xA0;9966</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>budo&#xA0;index.js</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;enable&#xA0;LiveReload&#xA0;on&#xA0;html/css/js&#xA0;changes</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;show&#xA0;timing&#xA0;information&#xA0;on&#xA0;re-bundle</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>budo&#xA0;index.js&#xA0;--verbose&#xA0;--live</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;pass&#xA0;some&#xA0;options&#xA0;to&#xA0;browserify</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>budo&#xA0;index.js&#xA0;--live&#xA0;--&#xA0;-t&#xA0;babelify&#xA0;--full-paths</span></span></div>\n</code></pre>\n<p>Then open <a href=\"http://localhost:9966\">http://localhost:9966</a> to see the content in action.</p>\n<p>To pretty-print in terminal, <a href=\"https://github.com/mattdesl/garnish\">garnish</a>, <a href=\"https://github.com/hughsk/bistre\">bistre</a> or another <a href=\"http://ndjson.org\">ndjson</a>-based stream can be used. Example:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;install&#xA0;garnish&#xA0;if&#xA0;you&#xA0;don&apos;t&#xA0;have&#xA0;it</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;garnish&#xA0;-g</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"comment line number-sign shell\"><span class=\"punctuation definition comment shell\"><span>#</span></span><span>&#xA0;pipe&#xA0;to&#xA0;garnish&#xA0;for&#xA0;pretty-printing</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>budo&#xA0;index.js&#xA0;</span><span class=\"keyword operator pipe shell\"><span>|</span></span><span>&#xA0;garnish</span></span></div>\n</code></pre>\n<p>See <a href=\"#docs\">docs</a> for more features. PRs/suggestions/comments welcome.</p>\n<h2 id=\"docs\">docs</h2>\n<ul>\n<li><a href=\"http://github.com/mattdesl/budo/blob/master/docs/basics.md\">basic usage</a></li>\n<li><a href=\"http://github.com/mattdesl/budo/blob/master/docs/comparisons.md\">comparisons</a></li>\n<li><a href=\"http://github.com/mattdesl/budo/blob/master/docs/programmatic-usage.md\">API and integrations (Gulp, Grunt, npm scripts)</a></li>\n<li><a href=\"http://github.com/mattdesl/budo/blob/master/docs/errors.md\">error reporting</a></li>\n<li><a href=\"http://github.com/mattdesl/budo/blob/master/docs/tests-and-examples.md\">running tests and examples</a></li>\n<li><a href=\"https://github.com/mattdesl/budo-chrome\">script injection with budo-chrome</a></li>\n<li><a href=\"http://mattdesl.svbtle.com/rapid-prototyping\">rapid prototyping with bud&#x14D; and wzrd</a></li>\n</ul>\n<h2 id=\"usage\">usage</h2>\n<p><a href=\"https://www.npmjs.com/package/budo\"></a></p>\n<h3 id=\"cli\">CLI</h3>\n<p>Details for <code>budo</code> command-line interface. Other options (like <code>-t</code>) will be sent to browserify.</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>Usage:</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;&#xA0;budo&#xA0;[entries]&#xA0;[opts]</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>Options:</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;&#xA0;--help,&#xA0;-h&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;show&#xA0;</span><span class=\"support function builtin shell\"><span>help</span></span><span>&#xA0;message</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;&#xA0;--port&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;the&#xA0;port&#xA0;to&#xA0;run,&#xA0;default&#xA0;9966</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;&#xA0;--host&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;the&#xA0;host,&#xA0;default&#xA0;</span><span class=\"string quoted double shell\"><span class=\"punctuation definition string begin shell\"><span>&quot;</span></span><span>localhost</span><span class=\"punctuation definition string end shell\"><span>&quot;</span></span></span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;&#xA0;--dir&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;the&#xA0;directory&#xA0;to&#xA0;serve,&#xA0;and&#xA0;the&#xA0;base&#xA0;</span><span class=\"meta scope for-in-loop shell\"><span class=\"keyword control shell\"><span>for</span></span><span>&#xA0;</span><span class=\"variable other loop shell\"><span>--outfile</span></span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--serve&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;override&#xA0;the&#xA0;bundle&#xA0;path&#xA0;being&#xA0;served</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--live&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support function builtin shell\"><span>enable</span></span><span>&#xA0;LiveReload&#xA0;integration</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--live-plugin&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support function builtin shell\"><span>enable</span></span><span>&#xA0;LiveReload&#xA0;but&#xA0;</span><span class=\"keyword control shell\"><span>do</span></span><span>&#xA0;not&#xA0;inject&#xA0;script&#xA0;tag</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--live-port&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;the&#xA0;LiveReload&#xA0;port,&#xA0;default&#xA0;35729</span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--verbose,&#xA0;-v&#xA0;&#xA0;&#xA0;&#xA0;verbose&#xA0;timing&#xA0;information&#xA0;</span><span class=\"meta scope for-in-loop shell\"><span class=\"keyword control shell\"><span>for</span></span><span>&#xA0;</span><span class=\"variable other loop shell\"><span>re-bundles</span></span></span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--poll=N&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;use&#xA0;polling&#xA0;</span><span class=\"meta scope for-in-loop shell\"><span class=\"keyword control shell\"><span>for</span></span><span>&#xA0;</span><span class=\"variable other loop shell\"><span>file</span></span><span>&#xA0;watch,&#xA0;with&#xA0;optional&#xA0;interval&#xA0;N</span></span></span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span class=\"meta scope for-in-loop shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--no-stream&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control shell\"><span>do</span></span><span>&#xA0;not&#xA0;print&#xA0;messages&#xA0;to&#xA0;stdout</span></span></span></span></span></div><div class=\"line\"><span class=\"source shell\"><span class=\"meta scope for-in-loop shell\"><span class=\"meta scope for-in-loop shell\"><span class=\"meta scope for-in-loop shell\"><span>&#xA0;&#xA0;--no-debug&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control shell\"><span>do</span></span><span>&#xA0;not&#xA0;use&#xA0;inline&#xA0;</span><span class=\"support function builtin shell\"><span>source</span></span><span>&#xA0;maps</span></span></span></span></span></div>\n</code></pre>\n<p>By default, messages will be printed to <code>process.stdout</code>, and <code>--debug</code> will be sent to browserify (for source maps). You can turn these off with <code>--no-stream</code> and <code>--no-debug</code>, respectively. </p>\n<p>Everything after <code>--</code> is passed directly to browserify; this is currently needed for subarg syntax. Example:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>budo&#xA0;index</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>js&#xA0;</span><span class=\"keyword operator js\"><span>--</span></span><span>live&#xA0;</span><span class=\"keyword operator js\"><span>--</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span>t&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;babelify&#xA0;</span><span class=\"keyword operator js\"><span>--</span></span><span>exetensions&#xA0;</span><span class=\"meta delimiter method period js\"><span>.</span></span><span>es6&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span></span></div>\n</code></pre>\n<h3 id=\"api\">API</h3>\n<p>The API mirrors the CLI except it does not write to <code>process.stdout</code> by default, and does not attempt to find available ports from a base port. </p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span class=\"storage modifier js\"><span>var</span></span><span>&#xA0;budo&#xA0;</span><span class=\"keyword operator js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>budo</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>budo</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>./src/index.js</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;live</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant language boolean true js\"><span>true</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>live&#xA0;reload</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;stream</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"support variable js\"><span>process</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span>stdout</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>log&#xA0;to&#xA0;stdout</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;port</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>8000</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>use&#xA0;this&#xA0;port</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span>on</span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>connnect</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>ev</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>...</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<p>See <a href=\"http://github.com/mattdesl/budo/blob/master/docs/programmatic-usage.md\">API usage</a> for more details.</p>\n<h2 id=\"script-injection\">Script Injection</h2>\n<p><a href=\"https://www.youtube.com/watch?v=cfgeN3G_Gl0\"><img src=\"http://i.imgur.com/LJP7d9I.png\" alt=\"screenshot\"></a></p>\n<p><sup><a href=\"https://www.youtube.com/watch?v=cfgeN3G_Gl0\">(click for demo)</a></sup></p>\n<p>The original motivation for making bud&#x14D; was to build an <em>experimental</em> tool and proof-of-concept around Chrome Script Injection. This has since split off into its own repository: <a href=\"https://github.com/mattdesl/budo-chrome\">budo-chrome</a>.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/budo/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}